apiVersion: v1
kind: Namespace
metadata:
  name: demo-apps
  labels:
    istio.io/ambient: enabled
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  namespace: demo-apps
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-demo
  template:
    metadata:
      labels:
        app: nginx-demo
    spec:
      containers:
        - name: nginx
          image: nginx:1.14.2
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
  namespace: demo-apps
spec:
  selector:
    app: nginx-demo
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: httpbin-deployment
  namespace: demo-apps
spec:
  replicas: 1
  selector:
    matchLabels:
      app: httpbin-demo
  template:
    metadata:
      labels:
        app: httpbin-demo
    spec:
      containers:
        - name: httpbin
          image: kennethreitz/httpbin
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: httpbin-service
  namespace: demo-apps
spec:
  selector:
    app: httpbin-demo
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: simple-web-deployment
  namespace: demo-apps
spec:
  replicas: 1
  selector:
    matchLabels:
      app: simple-web
  template:
    metadata:
      labels:
        app: simple-web
    spec:
      containers:
        - name: web
          image: hashicorp/http-echo
          args:
            - "-text=hello from simple-web"
          ports:
            - containerPort: 5678
---
apiVersion: v1
kind: Service
metadata:
  name: simple-web-service
  namespace: demo-apps
spec:
  selector:
    app: simple-web
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5678
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: alpine-deployment
  namespace: demo-apps
spec:
  replicas: 1
  selector:
    matchLabels:
      app: alpine
  template:
    metadata:
      labels:
        app: alpine
    spec:
      containers:
        - name: alpine
          image: alpine/curl
          command: ["/bin/sh"]
          args:
            - "-c"
            - |
              while true; do
                curl -s http://httpbin-service.demo-apps.svc.cluster.local:80/status/200
                echo 'request sent'
                sleep 2
              done
---
apiVersion: v1
kind: Service
metadata:
  name: alpine-service
  namespace: demo-apps
spec:
  selector:
    app: alpine
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
